USE LostCities

-- Drop all existing tables

DECLARE @Sql NVARCHAR(500) DECLARE @Cursor CURSOR

SET @Cursor = CURSOR FAST_FORWARD FOR
SELECT DISTINCT sql = 'ALTER TABLE [' + tc2.TABLE_NAME + '] DROP [' + rc1.CONSTRAINT_NAME + ']'
FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS rc1
LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc2 ON tc2.CONSTRAINT_NAME = rc1.CONSTRAINT_NAME

OPEN @Cursor FETCH NEXT FROM @Cursor INTO @Sql

WHILE (@@FETCH_STATUS = 0)
BEGIN
Exec sp_executesql @Sql
FETCH NEXT FROM @Cursor INTO @Sql
END

CLOSE @Cursor DEALLOCATE @Cursor
GO

EXEC sp_MSforeachtable 'DROP TABLE ?'
GO


-- Create tables

CREATE TABLE Users
(
  UserId UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
  Username NVARCHAR(25) NOT NULL UNIQUE,
  Rating INT NOT NULL DEFAULT 0
);

CREATE TABLE Games
(
  GameId UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
  Name NVARCHAR(25) NOT NULL,
  Password NVARCHAR(128) NULL,
  Host UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(UserId),
  CreationDate DATETIME NOT NULL DEFAULT GETDATE()
);

CREATE TABLE Participants
(
  ParticipantId UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
  [User] UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(UserId),
  Game UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Games(GameId),
  Type NVARCHAR(128) NOT NULL CONSTRAINT CK_Participants_Type CHECK (Type IN ('Player', 'Spectator')),
  IsReady BIT NOT NULL DEFAULT 0
);

CREATE TABLE Results
(
  ResultId UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
  Game UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Games(GameId),
  Winner UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(UserId),
  Loser UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Users(UserId)
);

CREATE TABLE Decks
(
  DeckId UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
  Game UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Games(GameId)
);

CREATE TABLE DiscardPiles
(
  DiscardPileId UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
  Game UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Games(GameId),
  Color NVARCHAR(128) NOT NULL CONSTRAINT CK_DiscardPiles_Color CHECK (Color IN ('Red', 'Green', 'White', 'Blue', 'Yellow')),
);

CREATE TABLE Hands
(
  HandId UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
  Game UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Games(GameId),
  Player UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Participants(ParticipantId)
);

CREATE TABLE Cards
(
  CardId UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
  Color NVARCHAR(128) NOT NULL CONSTRAINT CK_Cards_Color CHECK (Color IN ('Red', 'Green', 'White', 'Blue', 'Yellow')),
  Value TINYINT NOT NULL CONSTRAINT CK_Cards_Value CHECK (Value > 0 AND Value < 11)
);

CREATE TABLE DeckCards
(
  Card UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Cards(CardId),
  Deck UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Decks(DeckId)
);

CREATE TABLE DiscardPileCards
(
  Card UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Cards(CardId),
  DiscardPile UNIQUEIDENTIFIER FOREIGN KEY REFERENCES DiscardPiles(DiscardPileId)
);

CREATE TABLE HandCards
(
  Card UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Cards(CardId),
  Hand UNIQUEIDENTIFIER FOREIGN KEY REFERENCES Hands(HandId)
);